---
import Layout from '../../layouts/Layout.astro';
import JobApplication from '../../components/JobApplication';

// Define all possible job IDs for static generation
export function getStaticPaths() {
  // Return an array of objects with params property
  return [
    { params: { id: '1' } },
    { params: { id: '2' } }
  ];
}

const { id } = Astro.params;

// Define job type to fix TypeScript errors
type Job = {
  id: string;
  title: string;
  company: string;
  location: string;
  type: string;
  description: string;
  requirements: string[];
  salary: string;
};

// In a real app, you would fetch job details from your backend
// This is just a simple demo with hardcoded data
const jobs: Record<string, Job> = {
  '1': {
    id: '1',
    title: 'Desarrollador Frontend',
    company: 'TechSolutions',
    location: 'Remoto',
    type: 'Tiempo completo',
    description: 'Estamos buscando un desarrollador frontend con experiencia en React y TypeScript para unirse a nuestro equipo.',
    requirements: [
      'Experiencia con React y TypeScript',
      'Conocimientos de HTML, CSS y JavaScript',
      'Familiaridad con sistemas de control de versiones (Git)',
      'Capacidad para trabajar en equipo'
    ],
    salary: '$3,000,000 - $4,500,000 COP'
  },
  '2': {
    id: '2',
    title: 'Analista de Datos',
    company: 'DataInsights',
    location: 'Bogotá',
    type: 'Tiempo completo',
    description: 'Se requiere analista de datos con experiencia en SQL, Python y herramientas de visualización.',
    requirements: [
      'Experiencia con SQL y Python',
      'Conocimientos de herramientas de visualización como Tableau o Power BI',
      'Capacidad para interpretar datos y generar insights',
      'Habilidades de comunicación efectiva'
    ],
    salary: '$3,500,000 - $5,000,000 COP'
  }
};

// Safely access the job with proper type checking
const jobId = id || '';
const job = jobs[jobId] || null;

// Handle case where job is not found
if (!job) {
  return Astro.redirect('/empleos');
}
---

<Layout title={`JobHub - ${job.title}`}>
  <div class="container mx-auto px-4 py-8 max-w-4xl">
    <div class="bg-gray-800 rounded-lg shadow-lg p-6">
      <h1 class="text-2xl font-bold mb-2">{job.title}</h1>
      <div class="flex flex-wrap items-center text-gray-300 mb-6">
        <span class="mr-4">{job.company}</span>
        <span class="mr-4">•</span>
        <span class="mr-4">{job.location}</span>
        <span class="mr-4">•</span>
        <span>{job.type}</span>
      </div>
      
      <div class="mb-6">
        <h2 class="text-xl font-semibold mb-3">Descripción</h2>
        <p class="text-gray-300">{job.description}</p>
      </div>
      
      <div class="mb-6">
        <h2 class="text-xl font-semibold mb-3">Requisitos</h2>
        <ul class="list-disc pl-5 text-gray-300 space-y-2">
          {job.requirements.map((requirement) => (
            <li>{requirement}</li>
          ))}
        </ul>
      </div>
      
      <div class="mb-6">
        <h2 class="text-xl font-semibold mb-3">Salario</h2>
        <p class="text-gray-300">{job.salary}</p>
      </div>
      
      <div class="flex space-x-4 mt-6">
        <JobApplication client:load jobId={job.id} />
        
        <a 
          href="/empleos"
          class="bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-6 rounded inline-flex items-center"
        >
          Volver a Empleos
        </a>
      </div>
    </div>
  </div>
</Layout>